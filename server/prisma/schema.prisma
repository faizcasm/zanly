
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}
enum MaterialStatus {
  PENDING
  APPROVED
  REJECTED
}


model User{
  id Int @default(autoincrement()) @id
  email String @unique
  name String?
  role Role @default(USER)
  password String?
  image String?
  publicId String?
  otp       String?      
  otpExpiry DateTime?  
  materials Material[]
  bookmarks Bookmark[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now()) 
}
model Material {
  id          Int             @id @default(autoincrement())
  title       String
  description String?
  fileUrl     String
  fileType    String
  publicId    String?
  class       String
  subject     String
  type        String?
  status      MaterialStatus  @default(PENDING)
  uploadedBy  User            @relation(fields: [uploadedById], references: [id])
  searchVector Unsupported("tsvector")?  
  uploadedById Int
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  bookmarks Bookmark[]
}

model Bookmark {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  material   Material @relation(fields: [materialId], references: [id])
  materialId Int
  createdAt  DateTime @default(now())

  @@unique([userId, materialId]) 
}

model Notification{
  id Int @id @default(autoincrement())
  title String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now()) 
  expiresAt   DateTime
}